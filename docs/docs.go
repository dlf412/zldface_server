// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "DengLingfei",
            "email": "denglingfei@zlddata.cn"
        },
        "license": {
            "name": "Apache2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/faceCompare/v1": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "compare two faceImage files and return the score and save path(0\u003cscore\u003c=1)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "compare two faceImage files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "人脸照片1路径或者特征，有此参数忽略人脸照片1",
                        "name": "face1",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "人脸照片2路径或者特征，有此参数忽略人脸照片2",
                        "name": "face2",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "人脸照片1",
                        "name": "faceFile1",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "人脸照片2",
                        "name": "faceFile2",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.CompareFileRes"
                        }
                    }
                }
            }
        },
        "/faceFeature/v1": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "faceImagePath return from /faceImage/v1",
                "produces": [
                    "application/json"
                ],
                "summary": "get faceFeature by faceImagePath",
                "parameters": [
                    {
                        "type": "string",
                        "description": "faceImagePath",
                        "name": "faceImagePath",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.ExtractFeatureRes"
                        }
                    }
                }
            }
        },
        "/faceImage/v1": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "post a face image then return the save path and faceFeature.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "save a FaceImage and extract faceFeature",
                "parameters": [
                    {
                        "type": "file",
                        "description": "faceFile",
                        "name": "faceFile",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/v1.ExtractFeatureRes"
                        }
                    }
                }
            }
        },
        "/featureCompare/v1": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "compare two faceFeature and return the score (0\u003cscore\u003c=1)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "compare two faceFeature",
                "parameters": [
                    {
                        "description": "人脸特征1, 人脸特征2",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FaceFeatures"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"score\":0.90}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/users/v1": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "add users to a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create group users",
                "parameters": [
                    {
                        "description": "分组id, 用户uid列表",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FaceGroupUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{\"msg\":\"添加成功\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "delete users from a group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete group users",
                "parameters": [
                    {
                        "description": "分组id, 用户uid列表",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FaceGroupUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"删除成功\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/groups/v1": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create a group using gid and name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Greate a group",
                "parameters": [
                    {
                        "description": "group id, group name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FaceGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.FaceGroup"
                        }
                    }
                }
            }
        },
        "/user/match/v1": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "post a faceFile to match a user in a group and save the faceFile.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Match a user",
                "parameters": [
                    {
                        "type": "file",
                        "description": "faceFile",
                        "name": "faceFile",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group id, onlyUpFile为false必传",
                        "name": "gid",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "onlyUpFile, default is false",
                        "name": "onlyUpFile",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "filePath, 指定文件路径，设置了该值服务器将以此文件路径保存文件, 格式为 yyyy/mm/dd/$md5.jpg",
                        "name": "filePath",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "lowScore, 范围(0.7-0.9] 只有大于该分值才认为匹配 不传默认值是0.8",
                        "name": "lowScore",
                        "in": "formData"
                    },
                    {
                        "type": "number",
                        "description": "HighScore, 范围[lowScore-1.0] 搜索到大于该分值的匹配立即返回 不传默认值是0.9",
                        "name": "highScore",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.FaceMatchResult"
                        }
                    }
                }
            }
        },
        "/users/v1": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "create user if uid not exists else update",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create or Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "uid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "人脸照片",
                        "name": "faceFile",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "身份证人面照",
                        "name": "idFile",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "gid",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "format": "binary",
                        "description": "人脸特征文件, binary格式",
                        "name": "faceFeature",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "人脸照片路径（服务器已存在的相对路径）",
                        "name": "faceImagePath",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "身份证照片路径（服务器已存在的相对路径）",
                        "name": "idImagePath",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.FaceUser"
                        }
                    }
                }
            }
        },
        "/users/v1/{uid}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get user by uid if",
                "produces": [
                    "application/json"
                ],
                "summary": "get user by uid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.FaceUser"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.FaceGroup": {
            "type": "object",
            "properties": {
                "gid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.FaceUser": {
            "type": "object",
            "properties": {
                "faceFeature": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "faceImagePath": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "idImagePath": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "request.FaceFeatures": {
            "type": "object",
            "required": [
                "feature1",
                "feature2"
            ],
            "properties": {
                "feature1": {
                    "type": "string"
                },
                "feature2": {
                    "type": "string"
                }
            }
        },
        "request.FaceGroup": {
            "type": "object",
            "required": [
                "gid",
                "name"
            ],
            "properties": {
                "gid": {
                    "description": "分组id",
                    "type": "string"
                },
                "name": {
                    "description": "分组名",
                    "type": "string"
                }
            }
        },
        "request.FaceGroupUser": {
            "type": "object",
            "required": [
                "gid",
                "uids"
            ],
            "properties": {
                "gid": {
                    "description": "分组id",
                    "type": "string"
                },
                "uids": {
                    "description": "用户id列表",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "response.FaceMatchResult": {
            "type": "object",
            "properties": {
                "filePath": {
                    "type": "string"
                },
                "key": {
                    "description": "用户自定义的key, 可以是身份证号，可以是文件路径等",
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "v1.CompareFileRes": {
            "type": "object",
            "properties": {
                "faceImagePath1": {
                    "description": "人脸路径1",
                    "type": "string"
                },
                "faceImagePath2": {
                    "description": "人脸路径2",
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            }
        },
        "v1.ExtractFeatureRes": {
            "type": "object",
            "properties": {
                "faceFeature": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "faceImagePath": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8888",
	BasePath:    "/face/",
	Schemes:     []string{},
	Title:       "智链达人脸录入和识别服务API",
	Description: "This a face recognition server using arcsoft face engine",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
